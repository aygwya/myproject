<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xmlns:tx="http://www.springframework.org/schema/tx"
     xmlns:context="http://www.springframework.org/schema/context"
     xsi:schemaLocation="
     http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop 
     http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context-3.0.xsd" default-lazy-init="true">

<context:component-scan base-package="com.blog"></context:component-scan>

<!--告诉spring去哪里获取占位符的配置文件  -->
<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	<property name="locations">
		<list>
			<value>classpath:hibernate.properties</value>
		</list>
	</property>
</bean>


<!--配置数据源  -->
<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
	<property name="driverClass"><value>${db.driver}</value></property>      
    <property name="jdbcUrl"><value>${db.url}</value></property>     
    <property name="user"><value>${db.user}</value></property>    
    <property name="password"><value>${db.password}</value></property>    
</bean>

<!--数据源提供给spring的sessionFactory-->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- 让spring帮你扫描这个包底下的所有类，主要作用扫描跟数据库对应的实体类  -->
		<property name="packagesToScan" value="com.blog.model"/>
		<!-- 设置hibernate的属性  -->
		<property name="hibernateProperties">
	      <value>
	        hibernate.dialect=org.hibernate.dialect.MySQLDialect
	        hibernate.show_sql=true
	      </value>
	    </property>
	</bean>


<!--事务配置  -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">  
        <property name="sessionFactory" ref="sessionFactory"></property>  
    </bean>  
  
    <aop:config>
        <aop:advisor pointcut="execution(* spring.service.*Service.*(..))" advice-ref="txAdvice"/>  
    </aop:config>  
  
    <tx:advice id="txAdvice" transaction-manager="transactionManager">  
        <tx:attributes>  
            <tx:method name="get*" read-only="true" />  
            <tx:method name="query*" read-only="true"/>  
            <tx:method name="find*" read-only="true"/>  
            <tx:method name="load*" read-only="true"/>  
            <tx:method name="*" rollback-for="Exception"/>  
        </tx:attributes>  
    </tx:advice>  
    
<!--异常处理  -->
	<bean id="exceptionHandler" class="com.blog.common.exception.ExceptionHandler"/> 
</beans>